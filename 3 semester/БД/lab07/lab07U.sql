--выводятся специальность, дисциплины и средние оценки при сдаче экзаменов на факультете ТОВ. 
SELECT 
  f.FACULTY,
  g.PROFESSION,
  p.SUBJECT,
  AVG(p.NOTE) AS Avg_Mark
FROM FACULTY f
JOIN GROUPS g ON f.FACULTY = g.FACULTY 
JOIN STUDENT s ON g.IDGROUP = s.IDGROUP
JOIN PROGRESS p ON s.IDSTUDENT = p.IDSTUDENT
WHERE f.FACULTY = 'ТОВ'

GROUP BY f.FACULTY, g.PROFESSION, p.SUBJECT WITH ROLLUP

--с помощью cube
SELECT 
  f.FACULTY,
  g.PROFESSION,
  p.SUBJECT, 
  AVG(p.NOTE) AS Avg_Mark
FROM FACULTY f
JOIN GROUPS g ON f.FACULTY = g.FACULTY  
JOIN STUDENT s ON g.IDGROUP = s.IDGROUP
JOIN PROGRESS p ON s.IDSTUDENT = p.IDSTUDENT
WHERE f.FACULTY = 'ТОВ'
GROUP BY f.FACULTY, g.PROFESSION, p.SUBJECT WITH CUBE

--определяются результаты сдачи экзаме-нов.
SELECT
  g.PROFESSION,
  p.SUBJECT,
  AVG(p.NOTE) AS Avg_Mark
FROM GROUPS g  
JOIN STUDENT s ON g.IDGROUP = s.IDGROUP
JOIN PROGRESS p ON s.IDSTUDENT = p.IDSTUDENT
WHERE g.FACULTY = 'ТОВ'  
GROUP BY g.PROFESSION, p.SUBJECT

UNION

SELECT
  g.PROFESSION, 
  p.SUBJECT,
  AVG(p.NOTE) AS Avg_Mark
FROM GROUPS g
JOIN STUDENT s ON g.IDGROUP = s.IDGROUP 
JOIN PROGRESS p ON s.IDSTUDENT = p.IDSTUDENT
WHERE g.FACULTY = 'ХТиТ'
GROUP BY g.PROFESSION, p.SUBJECT

--c помощью union all
SELECT
  g.PROFESSION,
  p.SUBJECT,
  AVG(p.NOTE) AS Avg_Mark
FROM GROUPS g  
JOIN STUDENT s ON g.IDGROUP = s.IDGROUP
JOIN PROGRESS p ON s.IDSTUDENT = p.IDSTUDENT
WHERE g.FACULTY = 'ТОВ'  
GROUP BY g.PROFESSION, p.SUBJECT

UNION ALL

SELECT
  g.PROFESSION, 
  p.SUBJECT,
  AVG(p.NOTE) AS Avg_Mark
FROM GROUPS g
JOIN STUDENT s ON g.IDGROUP = s.IDGROUP 
JOIN PROGRESS p ON s.IDSTUDENT = p.IDSTUDENT
WHERE g.FACULTY = 'ХТиТ'
GROUP BY g.PROFESSION, p.SUBJECT

--с помощью intersect
SELECT
  g.PROFESSION,
  p.SUBJECT,
  AVG(p.NOTE) AS Avg_Mark
FROM GROUPS g  
JOIN STUDENT s ON g.IDGROUP = s.IDGROUP
JOIN PROGRESS p ON s.IDSTUDENT = p.IDSTUDENT
WHERE g.FACULTY = 'ТОВ'  
GROUP BY g.PROFESSION, p.SUBJECT

INTERSECT 

SELECT
  g.PROFESSION, 
  p.SUBJECT,
  AVG(p.NOTE) AS Avg_Mark
FROM GROUPS g
JOIN STUDENT s ON g.IDGROUP = s.IDGROUP 
JOIN PROGRESS p ON s.IDSTUDENT = p.IDSTUDENT
WHERE g.FACULTY = 'ХТиТ'
GROUP BY g.PROFESSION, p.SUBJECT

--except
SELECT
  g.PROFESSION,
  p.SUBJECT,
  AVG(p.NOTE) AS Avg_Mark
FROM GROUPS g  
JOIN STUDENT s ON g.IDGROUP = s.IDGROUP
JOIN PROGRESS p ON s.IDSTUDENT = p.IDSTUDENT
WHERE g.FACULTY = 'ТОВ'  
GROUP BY g.PROFESSION, p.SUBJECT

EXCEPT

SELECT
  g.PROFESSION, 
  p.SUBJECT,
  AVG(p.NOTE) AS Avg_Mark
FROM GROUPS g
JOIN STUDENT s ON g.IDGROUP = s.IDGROUP 
JOIN PROGRESS p ON s.IDSTUDENT = p.IDSTUDENT
WHERE g.FACULTY = 'ХТиТ'
GROUP BY g.PROFESSION, p.SUBJECT

--* Подсчитать количество студентов в каждой группе, на каждом факультете и всего в университете 
SELECT
  g.IDGROUP,
  COUNT(s.IDSTUDENT) AS StudentsCount,
  f.FACULTY,
  COUNT(s.IDSTUDENT) AS FacultyStudentsCount,
  COUNT(s.IDSTUDENT) AS TotalStudentsCount
FROM GROUPS g
JOIN STUDENT s ON g.IDGROUP = s.IDGROUP
JOIN FACULTY f ON g.FACULTY = f.FACULTY
GROUP BY g.IDGROUP, f.FACULTY WITH ROLLUP


--Подсчитать количество аудиторий по типам и суммарной вместимости в корпусах и всего
SELECT
  at.AUDITORIUM_TYPE,
  COUNT(a.AUDITORIUM) AS AuditoriumsCount,
  SUM(a.AUDITORIUM_CAPACITY) AS TotalCapacity
FROM AUDITORIUM a
JOIN AUDITORIUM_TYPE at ON a.AUDITORIUM_TYPE = at.AUDITORIUM_TYPE 
GROUP BY at.AUDITORIUM_TYPE WITH ROLLUP