use UNIVER

SELECT PULPIT.PULPIT_NAME
FROM PULPIT
WHERE PULPIT.FACULTY IN (
    SELECT PROFESSION.FACULTY
    FROM PROFESSION
    WHERE PROFESSION.PROFESSION_NAME LIKE '%технология%'
       OR PROFESSION.PROFESSION_NAME LIKE '%технологии%'
);

SELECT DISTINCT PULPIT.PULPIT_NAME
FROM PULPIT INNER JOIN PROFESSION 
ON PULPIT.FACULTY = PROFESSION.FACULTY
WHERE PROFESSION.PROFESSION_NAME LIKE '%технология%'
   OR PROFESSION.PROFESSION_NAME LIKE '%технологии%';

SELECT DISTINCT PULPIT.PULPIT_NAME
FROM PULPIT INNER JOIN PROFESSION 
ON PULPIT.FACULTY = PROFESSION.FACULTY
INNER JOIN FACULTY 
ON PROFESSION.FACULTY = FACULTY.FACULTY
WHERE PROFESSION.PROFESSION_NAME LIKE '%технология%'
   OR PROFESSION.PROFESSION_NAME LIKE '%технологии%';

SELECT AUDITORIUM_TYPE, AUDITORIUM, AUDITORIUM_CAPACITY
FROM AUDITORIUM A1
WHERE AUDITORIUM_CAPACITY = (
    SELECT TOP 1 AUDITORIUM_CAPACITY
    FROM AUDITORIUM A2
    WHERE A1.AUDITORIUM_TYPE = A2.AUDITORIUM_TYPE
    ORDER BY AUDITORIUM_CAPACITY DESC
)
ORDER BY AUDITORIUM_CAPACITY DESC;

SELECT FACULTY_NAME
FROM FACULTY 
WHERE NOT EXISTS (
    SELECT *
    FROM PULPIT
    WHERE PULPIT.FACULTY = FACULTY.FACULTY
);

SELECT
    (SELECT AVG(NOTE) FROM PROGRESS WHERE SUBJECT = 'ОАиП') AS AVG_OAIP,
    (SELECT AVG(NOTE) FROM PROGRESS WHERE SUBJECT = 'КГ') AS AVG_BD,
    (SELECT AVG(NOTE) FROM PROGRESS WHERE SUBJECT = 'СУБД') AS AVG_SUBD;


SELECT IDSTUDENT, NAME
FROM STUDENT
WHERE BDAY > ALL (SELECT BDAY FROM STUDENT WHERE IDGROUP = 1);


SELECT IDSTUDENT, NAME
FROM STUDENT
WHERE IDGROUP = ANY (SELECT IDGROUP FROM STUDENT WHERE BDAY > '1994-01-01');

SELECT BDAY, COUNT(*) AS Count, STRING_AGG(NAME, ', ') AS Students
FROM STUDENT
GROUP BY BDAY
HAVING COUNT(*) > 1;