CREATE TABLE MECHANIC(
    ID SERIAL NOT NULL UNIQUE,
    SECONDNAME VARCHAR(20) NOT NULL,
    FIRSTNAME VARCHAR(20) NOT NULL,
    THIRDNAME VARCHAR(20) NOT NULL,
    MAIL VARCHAR(40) NOT NULL UNIQUE,
    PHONE VARCHAR(16) NOT NULL UNIQUE,
    PRIMARY KEY (ID)
);
CREATE TABLE CUSTOMER(
    ID SERIAL NOT NULL UNIQUE,
    SECONDNAME VARCHAR(20) NOT NULL,
    FIRSTNAME VARCHAR(20) NOT NULL,
    THIRDNAME VARCHAR(20) NOT NULL,
    MAIL VARCHAR(40) NOT NULL UNIQUE,
    PHONE VARCHAR(16) NOT NULL UNIQUE,
    COUNTRY VARCHAR(50) NOT NULL,
    ADDRESS VARCHAR(100) NOT NULL,
    REQUISITES VARCHAR(16) NOT NULL,
    PRIMARY KEY (ID)
);
CREATE TABLE MANAGER(
    ID SERIAL NOT NULL UNIQUE,
    SECONDNAME VARCHAR(20) NOT NULL,
    FIRSTNAME VARCHAR(20) NOT NULL,
    THIRDNAME VARCHAR(20) NOT NULL,
    MAIL VARCHAR(40) NOT NULL UNIQUE,
    PHONE VARCHAR(16) NOT NULL UNIQUE,
    PRIMARY KEY (ID)
);
CREATE TABLE CARS(
    ID SERIAL NOT NULL UNIQUE,
    LABEL_MODEL_ID SERIAL NOT NULL,
    YEAR INT NOT NULL,
    MILEAGE NUMERIC NOT NULL,
    ENGINETYPE VARCHAR(20) NOT NULL,
    ENGINECAPACITY NUMERIC NOT NULL,
    POWER INT NOT NULL,
    PRICE MONEY NOT NULL,
    DESCRIPTION VARCHAR(1000) NOT NULL,
    STATUS BOOLEAN,
    PRIMARY KEY (ID),
    FOREIGN KEY (LABEL_MODEL_ID) REFERENCES LABEL_MODEL(ID)
);
CREATE TABLE LABELS(
    ID SERIAL NOT NULL UNIQUE,
    LABEL VARCHAR(30) NOT NULL,
    COUNTRY VARCHAR(50) NOT NULL,
    PRIMARY KEY (ID)
);
CREATE TABLE MODEL(
    ID SERIAL NOT NULL UNIQUE,
    MODEL VARCHAR(30) NOT NULL,
    PRIMARY KEY (ID)
);
CREATE TABLE LABEL_MODEL(
    ID SERIAL NOT NULL UNIQUE,
    LABEL_ID SERIAL NOT NULL,
    MODEL_ID SERIAL NOT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY (LABEL_ID) REFERENCES LABELS(ID),
    FOREIGN KEY (MODEL_ID) REFERENCES MODEL(ID)
);
CREATE TABLE ORDERCAR(
    ID SERIAL NOT NULL UNIQUE,
    CUSTOMER_ID SERIAL NOT NULL,
    MANAGER_ID SERIAL NOT NULL,
    DATE DATE NOT NULL,
    CAR_ID SERIAL NOT NULL,
    STATUS BOOLEAN,
    COMMENT VARCHAR(1000),
    PRIMARY KEY (ID),
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(ID),
    FOREIGN KEY (MANAGER_ID) REFERENCES MANAGER(ID),
    FOREIGN KEY (CAR_ID) REFERENCES CARS(ID)
);
CREATE TABLE SPAREPARTS(
    ID SERIAL NOT NULL UNIQUE,
    LABEL VARCHAR(50),
    LABEL_MODEL_ID SERIAL NOT NULL,
    DESCRIPTION VARCHAR(1000) NOT NULL,
    QUANTITY INT NOT NULL,
    PRICE MONEY NOT NULL,
    STATUS BOOLEAN,
    FOREIGN KEY (LABEL_MODEL_ID) REFERENCES LABEL_MODEL(ID)
);
CREATE TABLE ORDERSPAREPARTS(
    ID SERIAL NOT NULL UNIQUE,
    CUSTOMER_ID SERIAL NOT NULL,
    SPAREPART_ID SERIAL NOT NULL,
    DATE DATE NOT NULL,
    QUANTITY INT NOT NULL,
    STATUS BOOLEAN,
    PRIMARY KEY (ID),
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(ID),
    FOREIGN KEY (SPAREPART_ID) REFERENCES SPAREPARTS(ID)
);
CREATE TABLE SERVICESHEET(
    ID SERIAL NOT NULL UNIQUE,
    CUSTOMER_ID SERIAL NOT NULL,
    MECHANIC_ID SERIAL NOT NULL,
    DATE DATE NOT NULL,
    LABEL_MODEL_ID SERIAL NOT NULL,
    PROBLEMDESCRIPTION VARCHAR(1000) NOT NULL,
    PRICE MONEY,
    STATUS BOOLEAN,
    PRIMARY KEY (ID),
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(ID),
    FOREIGN KEY (MECHANIC_ID) REFERENCES MECHANIC(ID),
    FOREIGN KEY (LABEL_MODEL_ID) REFERENCES LABEL_MODEL(ID)
);
CREATE TABLE REVIEWS(
    ID SERIAL NOT NULL UNIQUE,
    CUSTOMER_ID SERIAL NOT NULL,
    DATE DATE NOT NULL,
    RATING INT NOT NULL,
    REVIEW VARCHAR(1000) NOT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(ID)
);
CREATE TABLE REPORTS_CAR (
    CAR_ID INT,
    CAR_LABEL VARCHAR(30),
    CAR_MODEL VARCHAR(30),
    CAR_YEAR INT,
    CAR_MILEAGE NUMERIC,
    CAR_ENGINETYPE VARCHAR(20),
    CAR_ENGINECAPACITY NUMERIC,
    CAR_POWER INT,
    CAR_PRICE MONEY,
    TOTAL_SALES INT,
    TOTAL_PRICE MONEY
);
CREATE TABLE REPORTS_SPAREPART (
    SPAREPART_ID INT,
    SPAREPART_LABEL VARCHAR(50),
    LABEL VARCHAR(30),
    MODEL VARCHAR(30),
    SPAREPART_QUANTITY INT,
    SPAREPART_PRICE MONEY,
    TOTAL_SALES INT,
    TOTAL_PRICE MONEY
);

select * from MECHANIC;
select * from MANAGER;
select * from CUSTOMER;
select * from CARS;
select * from SPAREPARTS;
select * from LABELS;
select * from MODEL;
select * from LABEL_MODEL;
select * from ORDERCAR;
select * from ORDERSPAREPARTS;
select * from REVIEWS;
select * from SERVICESHEET;
select * from reports_car;



SELECT proname
FROM pg_catalog.pg_namespace n
JOIN pg_catalog.pg_proc p ON p.pronamespace = n.oid
WHERE n.nspname = 'public';

SELECT COUNT(*)
FROM pg_proc
WHERE prokind IN ('p');
