#include <iostream>
#include <string>

using namespace std;

// определение структуры узла списка
struct Node {
    char data; // данные узла (символ)
    Node* next; // указатель на следующий узел
};

// функция добавления элемента в стек
void push(Node*& top, char c) {
    Node* newNode = new Node; // выделение памяти для нового узла
    newNode->data = c; // сохранение переданного символа в новом узле
    newNode->next = top; // указание на текущий верхний узел как следующий для нового
    top = newNode; // изменение верхнего узла на новый
}

// функция извлечения элемента из стека
char pop(Node*& top) {
    if (top == nullptr) { // если стек пуст, возвращается нулевой символ
        return '\0';
    }
    char c = top->data; // сохранение символа из верхнего узла
    Node* temp = top; // сохранение указателя на верхний узел
    top = top->next; // изменение верхнего узла на следующий
    delete temp; // освобождение памяти, занятой верхним узлом
    return c; // возврат извлеченного символа
}

// главная функция
int main() {
    setlocale(LC_ALL, "Rus"); // установка локали для вывода русского текста
    string a; // объявление переменной для ввода строки
    cout << "Введите строку с четным числом символов: ";
    cin >> a; // ввод строки пользователем
    Node* firstHalfTop = nullptr; // инициализация указателя на верхнюю часть стека первой половины строки
    Node* secondHalfTop = nullptr; // инициализация указателя на верхнюю часть стека второй половины строки
    int n = a.length(); // вычисление длины введенной строки
    // заполнение первой половины стека
    for (int i = 0; i < n / 2; i++) {
        push(firstHalfTop, a[i]);
    }
    // заполнение второй половины стека
    for (int i = n / 2; i < n; i++) {
        push(secondHalfTop, a[i]);
    }
    string b; // объявление переменной для результирующей строки
    // извлечение символов из первой половины и добавление в результирующую строку
    while (firstHalfTop != nullptr) {
        b += pop(firstHalfTop);
    }
    // извлечение символов из второй половины и добавление в результирующую строку
    while
        (firstHalfTop != nullptr) {
        b += pop(firstHalfTop);
    }
    while
        (secondHalfTop != nullptr) {
        b += pop(secondHalfTop);
    }
    cout << "Результат:" << b << endl;
    return 0;
}